<?php include_once("header.php");
session_destroy();
?>

    <div class="mypadding" style="text-align: justify">

        <div class="h1" style="text-align: center">
            Встановлення та налаштування
        </div>
        <div class="h2" style="text-align: center">
            Вбудований web-сервер
        </div>
        <div>
            Ви можете почати вивчення PHP без необхідності у встановленні та конфігурації повноцінного веб-сервера
            (Необхідний PHP 5.4 або новіше). Для запуску сервера, запустіть наступну команду із вашого терміналу
            в корені вашого проекту:
            <br>
                <code>
                    php -S localhost:8000
                </code>

        </div>

        <div class="h2" style="text-align: center">
            Встановлення на Mac
        </div>
        <div>
            OSX іде разом з вбудованим PHP, та зазвичай його версія трохи відстає від останньої стабільної.
            Lion постачається з PHP 5.3.6 а Mountain Lion з 5.3.10.
            <br>
            Ви можете обновити PHP на OSX через кілька менеджерів пакетів, з рекомендованим php-osx by Liip.
            <br>
            Інший варіант скомпілювати самостійно. В цьому випадку ви повинні впевнитися,
            що у вас встановлений Xcode, або його аналог від Apple “Інструменти командного рядка для Xcode”,
            їх можна скачати з Apple’s Mac Developer Center.
            <br>
            Для повного набору “все-в-одному”, включаючи PHP, веб-сервер Apache, та базу даних MySQL з
            хорошим графічним інтерфейсом, спробуйте MAMP.
        </div>

        <div class="h2" style="text-align: center">
            Встановлення у Windows
        </div>
        <div>
            PHP для Windows доступний в кількох видах. Ви можете скачати бінарні файли і до недавнього часу
            могли використовувати встановлювач ‘.msi’. Встановлювач більше не підтримується починаючи з
            версії PHP 5.3.0.
            <br>
            Для навчання та локальної розробки ви можете використовувати вбудований вебсервер із PHP 5.4
            отож вам не потрібно хвилюватись за його конфугурування. Якщо ви хочете використовувати пакет
            “все-в-одному” котрий включає вебсервер та MySQL також тоді інструменти такі як Web Platform Installer,
            XAMPP та WAMP допоможуть вам швидко отримати готове середовище для розробки на Windows.
            Тим не менше, ці інструменти мають певні відмінності від production тож не забувайте про ці особливості,
            коли ви працюєте в Windows, а розгортання відбувається в Linux.
            <br>
            Якщо вам потрібно розгорнути вашу систему на Windows тоді IIS7 забезпечить вам найкращу стабільність
            та продуктивність. Ви можете використовувати phpmanager (GUI плагин для IIS7) щоб спростити
            конфігурування та керування PHP. IIS7 постачається з вбудованим та готовим до використання FastCGI,
            вам лише потрібно сконфігурувати PHP як обробник. Для підтримки та додаткових ресурсів існує
            спеціальний розділ на iis.netдля PHP.
            <br>
            Зазвичай, запуск вашої програми в різних середовищах при розробці та її безпосередньому використанні
            може призвести до дивних помилок, що появлятимуться коли ви запускаєте програму.Якщо ви розробляєте
            програми на Windows для використання під Linux, або якусь іншу ОС (не Windows).
            Тоді ви повинні розглянути використання віртуальної машини. Це звучить складно, та з допомогою Vagrant
            ви можете встановити прості обгортки, згодом використовуючи Puppet або Chef ви можете створювати ці
            блоки та ділитися ними з своїми колегами, щоб впевнитися, що ви працюєте над одним і тим же.
            Більше про це згодом.
        </div>

        <div class="h1" style="text-align: center">
            Керівництво з написання коду
        </div>
        <div>
            Світ PHP великий та різноманітний, він складається з незліченних бібліотек, фреймворків та компонентів.
            Це спільне для PHP розробників, можливість обирати кілька з них та обєднувати в одному проекті.
            Важливо, щоб PHP код притримувався, на стільки, на скільки можливо, загальної стилістики коду,
            щоб полегшити розробникам змішування та поєднання різноманітних бібліотек для їх проектів.
            <br>
            Група Взаємодії Фреймворків (раніше відома, як ‘Група PHP Стандартів’) запропонувала та схвалила
            серію рекомендацій по стилю кодування, відомих як PSR-0, PSR-1 і PSR-2. Не дозволяйте цим смішним
            іменам спантеличити вас, ці рекомендації всього лиш набір правил, котрі деякі проекти, такі як Drupal,
            Zend, CakePHP, phpBB, AWS SDK, FuelPHP, Lithium, та інші починають впроваджувати. Ви можете почати
            використовувати їх для своїх власних проектів або продовжувати використовувати ваш власний стиль.
            <br>
            В ідеалі ви повинні писати код, котрий притримується одного або кількох із цих стандартів,
            щоб інші розробники могли легко читати і працювати з вашим кодом. Всі вони добавляють вимоги до
            попередньої рекомендації, отож використання PSR-1 вимагає PSR-0, але не вимагає PSR-2.
            <br>
            Read about PSR-0
            <br>
            Read about PSR-1
            <br>
            Read about PSR-2
            <br>
            Read about PSR-4
            <br>
            Read about PEAR Coding
            <br>
            Read about Zend Coding Standards
            <br>
            Read about Symfony Coding Standards
            <br>
            Ви можете використовувати PHP_CodeSniffer, для перевірки коду на відповідність цим рекомендаціям,
            додатки до текстових редакторів; Sublime Text 2 або подібні для отримання допомоги у реальному часі.
            <br>
            Використовуйте Налагоджувач стандартів кодування PHP Фаб’єна Потенсьєра для автоматичної зміни
            синтаксису вашого коду, щоб він відповідав цим стандартам, це позбавить вас від виправлення
            кожної проблеми вручну.
            <br>
            Слід використовувати англійську для іменування. Коментарі можуть бути на будь-якій мові, зручній для усіх,
            хто працює з кодом або буде працювати у майбутньому.
        </div>

    </div>

<?php include_once("footer.php");